.TH "lib/esd/backend/null_backend.c" 3 "Sun Feb 3 2019" "Version 0.3" "OpenESS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
lib/esd/backend/null_backend.c
.SH SYNOPSIS
.br
.PP
\fC#include 'ess_format\&.h'\fP
.br
\fC#include 'config\&.h'\fP
.br
\fC#include 'ess_backend\&.h'\fP
.br
\fC#include 'backend/null_backend\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "\fBess_backend_error_t\fP \fBess_backend_null_probe\fP (\fBess_format_t\fP format)"
.br
.ti -1c
.RI "\fBess_backend_error_t\fP \fBess_backend_null_open\fP (\fBess_format_t\fP format)"
.br
.ti -1c
.RI "\fBess_backend_error_t\fP \fBess_backend_null_close\fP (void)"
.br
.ti -1c
.RI "\fBess_backend_error_t\fP \fBess_backend_null_pause\fP (void)"
.br
.ti -1c
.RI "\fBess_backend_error_t\fP \fBess_backend_null_write\fP (void *buffer, int buf_size, int *wrote)"
.br
.ti -1c
.RI "\fBess_backend_error_t\fP \fBess_backend_null_read\fP (void *buffer, int buf_size, unsigned int *readed)"
.br
.ti -1c
.RI "\fBess_backend_error_t\fP \fBess_backend_null_flush\fP (void)"
.br
.ti -1c
.RI "\fBess_backend_error_t\fP \fBess_backend_null_resume\fP (void)"
.br
.ti -1c
.RI "\fBess_backend_error_t\fP \fBess_backend_null_set_sample_format\fP (\fBess_format_t\fP format)"
.br
.ti -1c
.RI "const char * \fBess_backend_null_get_name\fP (void)"
.br
.ti -1c
.RI "const char * \fBess_backend_null_get_info\fP (void)"
.br
.ti -1c
.RI "\fBess_backend_facktory_t\fP * \fBess_backend_null_getFactory\fP ()"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "int \fBg_null_paused\fP = 0"
.br
.ti -1c
.RI "\fBess_backend_facktory_t\fP \fB_null_backend_config\fP"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "\fBess_backend_error_t\fP ess_backend_null_close (void)"

.SS "\fBess_backend_error_t\fP ess_backend_null_flush (void)"

.SS "const char* ess_backend_null_get_info (void)"

.SS "const char* ess_backend_null_get_name (void)"

.SS "\fBess_backend_facktory_t\fP* ess_backend_null_getFactory ()"
get the null_backend factory 
.SS "\fBess_backend_error_t\fP ess_backend_null_open (\fBess_format_t\fP format)"

.SS "\fBess_backend_error_t\fP ess_backend_null_pause (void)"

.SS "\fBess_backend_error_t\fP ess_backend_null_probe (\fBess_format_t\fP format)"

.SS "\fBess_backend_error_t\fP ess_backend_null_read (void * buffer, int buf_size, unsigned int * readed)"

.SS "\fBess_backend_error_t\fP ess_backend_null_resume (void)"

.SS "\fBess_backend_error_t\fP ess_backend_null_set_sample_format (\fBess_format_t\fP format)"

.SS "\fBess_backend_error_t\fP ess_backend_null_write (void * buffer, int buf_size, int * wrote)"

.SH "Variable Documentation"
.PP 
.SS "\fBess_backend_facktory_t\fP _null_backend_config"
\fBInitial value:\fP
.PP
.nf
= {
  ess_backend_null_probe,
  ess_backend_null_open,
  ess_backend_null_close,
  ess_backend_null_pause,
  ess_backend_null_resume,
  ess_backend_null_write,
  ess_backend_null_read,
  ess_backend_null_flush,
  ess_backend_null_set_sample_format,
  ess_backend_null_get_name,
  ess_backend_null_get_info
}
.fi
.SS "int g_null_paused = 0"

.SH "Author"
.PP 
Generated automatically by Doxygen for OpenESS from the source code\&.
